{"version":3,"sources":["button/Button.js","buttonsSwitchoffOverlay/ButtonsSwitchoffOverlay.js","buttons/Buttons.js","screen/Screen.js","metronome/Metronome.js","clause/Clause.js","App.js","index.js"],"names":["Button","className","label","id","onClick","ButtonsSwitchoffOverlay","Buttons","turnOnOff","changeBPM","tapTempo","beat","Screen","BPM","turnedOn","Math","round","Metronome","useState","lastClick","setLastClick","setBPM","tickingInterval","setTickingInterval","isBeating","setIsBeating","setTurnedOn","document","getElementById","style","zIndex","classList","remove","window","clearInterval","add","num","newClick","Date","getTime","calcBPM","setTimeout","setInterval","Clause","target","href","rel","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eb5b3bb2.chunk.js","sourcesContent":["import './button.css'\r\n\r\nconst Button = ({className, label, id, onClick}) => {\r\n    return (\r\n        <div className=\"buttonWrapper\">\r\n            <div className=\"buttonLabel\">{label}</div>\r\n            <div className={`button ${className}`} id={id} onClick={onClick}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;","import './buttonsSwitchoffOverlay.css'\r\n\r\nconst ButtonsSwitchoffOverlay = () => {\r\n    return (\r\n        <div id=\"buttonsSwitchoffOverlay\" />\r\n    )\r\n}\r\n\r\nexport default ButtonsSwitchoffOverlay","import './buttons.css'\r\nimport Button from '../button/Button';\r\nimport ButtonsSwitchoffOverlay from '../buttonsSwitchoffOverlay/ButtonsSwitchoffOverlay';\r\nimport {AiOutlinePoweroff, AiFillCaretDown, AiFillCaretUp, AiFillCaretRight, AiOutlinePause, AiOutlineSound } from \"react-icons/ai\"\r\n\r\nconst Buttons = ({turnOnOff, changeBPM, tapTempo, beat}) => {\r\n    return (\r\n        <div id=\"buttonsWrapper\">\r\n            <ButtonsSwitchoffOverlay />\r\n            <Button id=\"power\" label={<AiOutlinePoweroff />} onClick={()=>turnOnOff()} />\r\n            <Button className=\"oval\" id=\"mode\" label=\"MODE\"/>\r\n            <Button className=\"oval\" id=\"select\" label=\"SELECT\"/>\r\n            <Button className=\"oval\" id=\"decreaseTempo\" label={<AiFillCaretDown />} onClick={()=>changeBPM(-1)}/>\r\n            <Button className=\"oval\" id=\"increaseTempo\" label={<AiFillCaretUp />} onClick={()=>changeBPM(1)}/>\r\n            <Button className=\"circle\" id=\"tapReset\" label=\"TAP/RESET\" onClick={()=>tapTempo()}/>\r\n            <Button className=\"circle\" id=\"playPause\" label={\r\n                <>\r\n                <AiFillCaretRight />\r\n                <AiOutlinePause />\r\n                <AiOutlineSound />\r\n                </>\r\n            } onClick={()=>beat()}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Buttons;","import './screen.css'\r\n\r\nconst Screen = ({BPM, turnedOn}) => {\r\n    return (\r\n        <div id=\"screenWrapper\">\r\n            {turnedOn?Math.round(BPM):\"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Screen;","import './metronome.css'\r\nimport Buttons from '../buttons/Buttons';\r\nimport Screen from '../screen/Screen';\r\nimport {useState} from 'react'\r\n\r\nconst Metronome = () => {\r\n\r\n    const [lastClick, setLastClick] = useState();\r\n    const [BPM, setBPM] = useState(60);\r\n    const [tickingInterval, setTickingInterval] = useState();\r\n    const [isBeating, setIsBeating] = useState(false)\r\n    const [turnedOn, setTurnedOn] = useState(false)\r\n  \r\n    const calcBPM = () => {\r\n        if (!lastClick) setLastClick( (new Date()).getTime() )\r\n        else {\r\n            const newClick = (new Date()).getTime()\r\n            setBPM(60000/(newClick-lastClick))\r\n            setLastClick(newClick)\r\n        }\r\n    }\r\n    const changeBPM = (num) => {\r\n        setBPM(BPM+num)\r\n    }\r\n    const tapTempo = () => {\r\n        calcBPM();\r\n    }\r\n    const beat = () => {\r\n        if(!isBeating){\r\n            document.getElementById(\"playPause\").classList.add(\"redLED\")\r\n            setTimeout(()=>document.getElementById(\"playPause\").classList.remove(\"redLED\"), 100);\r\n  \r\n            setTickingInterval(window.setInterval(()=>{\r\n              document.getElementById(\"playPause\").classList.add(\"redLED\")\r\n              setTimeout(()=>document.getElementById(\"playPause\").classList.remove(\"redLED\"), 100);\r\n            }, (60/BPM) * 1000) )\r\n  \r\n            setIsBeating(true)\r\n          }\r\n          else if(isBeating){          \r\n            setIsBeating(false)\r\n            window.clearInterval(tickingInterval);\r\n          }\r\n    }\r\n\r\n    const turnOnOff = () => {\r\n        if(document.getElementById(\"buttonsSwitchoffOverlay\").style.zIndex===\"-1\") {\r\n            document.getElementById(\"buttonsSwitchoffOverlay\").style.zIndex=\"50\"\r\n            document.getElementById(\"power\").classList.remove(\"redLED\")\r\n            setTurnedOn(false);\r\n            setIsBeating(false)\r\n            window.clearInterval(tickingInterval);\r\n        }\r\n        else {\r\n            document.getElementById(\"buttonsSwitchoffOverlay\").style.zIndex=\"-1\"\r\n            document.getElementById(\"power\").classList.add(\"redLED\")\r\n            setTurnedOn(true)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id=\"metronomeWrapper\">\r\n            <div id=\"metronome\">\r\n                <Screen BPM={BPM} turnedOn={turnedOn}/>\r\n                <Buttons\r\n                    turnOnOff={turnOnOff}\r\n                    changeBPM={changeBPM}\r\n                    tapTempo={tapTempo}\r\n                    beat={beat}\r\n                />\r\n                <div id=\"blackBottomPanel\" />\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Metronome;","import './clause.css'\r\n\r\nconst Clause = () => {\r\n    return (\r\n        <div id=\"clause\">\r\n            <a target=\"_blank\" href=\"https://icons8.com/icon/KYeWtplRceYV/metronome\" rel=\"noreferrer\">Metronome</a> favicon by <a target=\"_blank\" href=\"https://icons8.com\" rel=\"noreferrer\">Icons8</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clause;","import './App.css';\r\nimport Metronome from './metronome/Metronome';\r\nimport Clause from './clause/Clause'\r\n// import {useEffect} from 'react';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Metronome />\r\n      <Clause />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}